---
/**
 * Trang ch·ªß hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
 * S·ª≠ d·ª•ng API ƒë·ªÉ l·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m v√† hi·ªÉn th·ªã b·∫±ng ProductCard component
 */

import ProductCard from '../components/ProductCard.astro';
import Layout from '../layouts/Layout.astro';
import { getProducts, getCategories } from '../lib/api';
import type { ProductResponse } from '../types/product';

// L·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m v√† danh m·ª•c
const productData = await getProducts();
const products = productData.products_data || [];
const categoriesRes = await getCategories();

/**
 * T·∫°o map category name -> rank ƒë·ªÉ s·∫Øp x·∫øp
 */
const categoryNameToRank: Record<string, number> = (categoriesRes.categories_data || []).reduce((acc, c) => {
  if (c.category_name) acc[c.category_name] = (c as any).rank ?? 9999;
  return acc;
}, {} as Record<string, number>);

/**
 * H√†m nh√≥m s·∫£n ph·∫©m theo danh m·ª•c
 * @param products - M·∫£ng s·∫£n ph·∫©m
 * @returns Object v·ªõi key l√† category_name v√† value l√† m·∫£ng s·∫£n ph·∫©m
 */
function groupProductsByCategory(products: ProductResponse['products_data']) {
  return products.reduce((groups, product) => {
    const category = product.category_name;
    if (!groups[category]) {
      groups[category] = [];
    }
    groups[category].push(product);
    return groups;
  }, {} as Record<string, ProductResponse['products_data']>);
}

const groupedProducts = groupProductsByCategory(products);
---

<Layout 
  title="G·∫°o L√¢m Th√∫y - S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao"
  description="Kh√°m ph√° c√°c s·∫£n ph·∫©m g·∫°o ch·∫•t l∆∞·ª£ng cao t·ª´ G·∫°o L√¢m Th√∫y. G·∫°o d·∫ªo, g·∫°o n·ªü, n·∫øp v√† nhi·ªÅu lo·∫°i kh√°c."
  totalProducts={products.length}
>
    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
      <!-- Hero Section -->
      <div class="hero bg-gradient-to-r from-primary/10 to-secondary/10 rounded-2xl mb-8">
        <div class="hero-content flex-col lg:flex-row items-center gap-6 md:gap-10">
          <div class="max-w-md mx-auto text-center lg:text-left">
            <h2 class="text-4xl font-bold text-base-content mb-4">
              G·∫°o L√¢m Th√∫y
            </h2>
            <p class="text-lg text-base-content/70 mb-6">
              Kh√°m ph√° c√°c s·∫£n ph·∫©m g·∫°o ƒëa d·∫°ng v·ªõi ch·∫•t l∆∞·ª£ng t·ªët nh·∫•t
            </p>
            <div class="flex flex-col sm:flex-row items-stretch sm:items-center justify-center lg:justify-start gap-3 w-full">
              <button class="btn btn-primary btn-lg w-full sm:w-auto" data-gallery-trigger>XEM ALBUM B·∫¢NG GI√Å</button>
              <a href="/about" class="link md:hidden">Li√™n h·ªá</a>
              <a href="/about"><button class="hidden md:inline-flex btn btn-ghost btn-lg">Li√™n h·ªá</button></a>
            </div>
          </div>
          <div class="w-full lg:w-1/2 mt-2 md:mt-0">
            <img
              src="/hero-image.svg"
              alt="Minh h·ªça s·∫£n ph·∫©m g·∫°o ch·∫•t l∆∞·ª£ng cao"
              class="w-full md:w-full mx-auto h-auto hero-illustration"
              width="1920"
              height="1080"
              loading="lazy"
            />
          </div>
        </div>
      </div>

      <!-- Products Grid -->
      {Object.keys(groupedProducts).length > 0 ? (
        Object.entries(groupedProducts)
          .sort(([a], [b]) => (categoryNameToRank[a] ?? 9999) - (categoryNameToRank[b] ?? 9999))
          .map(([category, categoryProducts]) => {
          const products = categoryProducts as ProductResponse['products_data'];
          return (
            <section class="mb-12">
              <!-- Category Header -->
              <div class="flex items-center gap-4 mb-6">
                <a 
                  href="/products" 
                  class="flex items-center gap-3 hover:opacity-80 transition-opacity duration-200 group"
                >
                  <h3 class="text-2xl font-bold text-base-content group-hover:text-primary transition-colors duration-200">
                    {category}
                  </h3>
                  <span class="badge">
                    {products.length}
                  </span>
                  <svg 
                    class="w-5 h-5 text-base-content/60 transition-colors duration-200" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              </div>
              
              <!-- Products Grid -->
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                {products.map((product, index) => (
                  <div class={index >= 4 ? 'hidden sm:block' : ''}>
                    <ProductCard product={product} />
                  </div>
                ))}
              </div>

              {/* Mobile-only: show more link to /products */}
              {products.length > 4 && (
                <div class="mt-4 text-center text-md sm:hidden">
                  <a href="/products" class="badge badge-ghost">Xem th√™m
                    <svg 
                    class="w-5 h-5 text-base-content/60 group-hover:text-primary transition-colors duration-200" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                  </a>
                </div>
              )}
            </section>
          );
        })
      ) : (
        <!-- Empty State -->
        <div class="text-center py-12">
          <div class="text-6xl mb-4">üåæ</div>
          <h3 class="text-2xl font-bold text-base-content mb-2">
            Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o
          </h3>
          <p class="text-base-content/70">
            Vui l√≤ng th·ª≠ l·∫°i sau ho·∫∑c ki·ªÉm tra k·∫øt n·ªëi m·∫°ng
          </p>
      		</div>
      )}
    </main>
  </div>
</Layout>